# Brain2 Project - Unified Environment Configuration
# ==============================================================================
# This file contains ALL environment variables for frontend, backend, and infra.
# Copy this file to .env and update with your actual values.
#
# USAGE:
#   cp .env.example .env
#   # Edit .env with your values
#   ./build.sh  # Build script automatically loads root .env
# ==============================================================================

# ============================================================================
# PROJECT CONFIGURATION
# ============================================================================

# Project environment: development, staging, production
PROJECT_ENV=development

# Project name for resource naming
PROJECT_NAME=brain2

# AWS Region for all resources
AWS_REGION=us-west-2

# ============================================================================
# SUPABASE AUTHENTICATION (Shared across all components)
# ============================================================================

# Supabase project URL
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase public/anonymous key (safe to expose in frontend)
SUPABASE_ANON_KEY=your-supabase-anon-key

# Supabase service role key (backend only - keep secret!)
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# JWT secret for token validation (optional - Supabase provides this)
SUPABASE_JWT_SECRET=your-jwt-secret

# ============================================================================
# FRONTEND CONFIGURATION (Vite/React)
# ============================================================================

# Frontend environment variables must be prefixed with VITE_

# Supabase configuration for frontend (auto-populated from above)
VITE_SUPABASE_URL=${SUPABASE_URL}
VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}

# API Base URL - automatically set during build/deployment
# Development: Will be set to local backend URL
# Production: Will be set to deployed API Gateway URL
VITE_API_BASE_URL=https://your-api-id.execute-api.us-west-2.amazonaws.com

# Local development API URL (when running backend locally)
VITE_API_BASE_URL_LOCAL=http://localhost:8080

# WebSocket URL for real-time features
VITE_WEBSOCKET_URL=wss://your-ws-id.execute-api.us-west-2.amazonaws.com/prod

# Frontend build mode
VITE_MODE=production

# Enable frontend debug mode
VITE_DEBUG=false

# Enable analytics/tracking
VITE_ENABLE_ANALYTICS=false

# Analytics tracking ID (Google Analytics, etc.)
VITE_ANALYTICS_ID=

# ============================================================================
# BACKEND CONFIGURATION (Go/Lambda)
# ============================================================================

# Backend environment
BACKEND_ENV=production

# Log level for backend services
LOG_LEVEL=info

# Enable debug features
DEBUG=false

# DynamoDB table name
TABLE_NAME=brain2-prod

# DynamoDB GSI name
INDEX_NAME=GSI1

# EventBridge event bus name
EVENT_BUS_NAME=brain2-events

# Lambda function configuration
LAMBDA_MEMORY_SIZE=512
LAMBDA_TIMEOUT=30

# Backend API configuration
API_VERSION=v1

# Enable CORS for local development
ENABLE_CORS=true
CORS_ORIGINS=https://your-frontend-domain.com,http://localhost:5173

# ============================================================================
# INFRASTRUCTURE/CDK CONFIGURATION
# ============================================================================

# CDK deployment configuration
CDK_DEFAULT_ACCOUNT=123456789012
CDK_DEFAULT_REGION=${AWS_REGION}

# Infrastructure environment
INFRA_ENV=${PROJECT_ENV}

# Stack naming
STACK_NAME_PREFIX=${PROJECT_NAME}

# Domain configuration (optional)
DOMAIN_NAME=your-domain.com
CERTIFICATE_ARN=arn:aws:acm:us-east-1:123456789012:certificate/your-cert-id

# S3 bucket for frontend hosting
FRONTEND_BUCKET_NAME=${PROJECT_NAME}-frontend-${PROJECT_ENV}

# CloudFront distribution (auto-generated if not specified)
CLOUDFRONT_DISTRIBUTION_ID=

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# DynamoDB configuration
DB_TABLE_NAME=${TABLE_NAME}
DB_GSI_NAME=${INDEX_NAME}

# DynamoDB billing mode: PAY_PER_REQUEST or PROVISIONED
DB_BILLING_MODE=PAY_PER_REQUEST

# For PROVISIONED billing mode
DB_READ_CAPACITY=5
DB_WRITE_CAPACITY=5

# Backup configuration
DB_BACKUP_ENABLED=true
DB_BACKUP_RETENTION_DAYS=30

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================

# Enable CloudWatch monitoring
MONITORING_ENABLED=true

# Log retention period (days)
LOG_RETENTION_DAYS=30

# Enable X-Ray tracing
XRAY_TRACING_ENABLED=false

# CloudWatch dashboard
DASHBOARD_ENABLED=false

# Alerting configuration
ALERTS_ENABLED=true
ALERT_EMAIL=your-email@example.com

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Enable WAF protection
WAF_ENABLED=true

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=1000

# IP whitelist (comma-separated)
IP_WHITELIST=

# Enable audit logging
AUDIT_LOGGING_ENABLED=true

# ============================================================================
# PERFORMANCE CONFIGURATION
# ============================================================================

# Lambda configuration
LAMBDA_RESERVED_CONCURRENCY=10
LAMBDA_PROVISIONED_CONCURRENCY=2

# API Gateway throttling
API_THROTTLE_BURST_LIMIT=2000
API_THROTTLE_RATE_LIMIT=1000

# CloudFront caching
CLOUDFRONT_TTL_DEFAULT=86400
CLOUDFRONT_TTL_MAX=31536000

# ============================================================================
# DEVELOPMENT CONFIGURATION
# ============================================================================

# Development tools
DEV_HOT_RELOAD=true
DEV_SOURCE_MAPS=true

# Local development URLs
DEV_FRONTEND_URL=http://localhost:5173
DEV_BACKEND_URL=http://localhost:8080
DEV_API_URL=http://localhost:3000

# Local services (DynamoDB Local, etc.)
DYNAMODB_LOCAL_ENDPOINT=http://localhost:8000
LOCALSTACK_ENDPOINT=http://localhost:4566

# ============================================================================
# CI/CD CONFIGURATION
# ============================================================================

# GitHub Actions / CI configuration
CI_DEPLOY_ON_PUSH=true
CI_RUN_TESTS=true
CI_DEPLOY_ENVIRONMENT=${PROJECT_ENV}

# Deployment configuration
DEPLOY_FRONTEND=true
DEPLOY_BACKEND=true
DEPLOY_INFRASTRUCTURE=true

# Build optimization
BUILD_OPTIMIZE=true
BUILD_MINIFY=true

# ============================================================================
# EXTERNAL SERVICES (Optional)
# ============================================================================

# Email service (SES, SendGrid, etc.)
EMAIL_PROVIDER=ses
EMAIL_FROM_ADDRESS=noreply@your-domain.com

# Storage service (S3, etc.)
STORAGE_PROVIDER=s3
STORAGE_BUCKET=${FRONTEND_BUCKET_NAME}

# Analytics/monitoring services
ANALYTICS_PROVIDER=cloudwatch

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable experimental features
FEATURE_EXPERIMENTAL_UI=false
FEATURE_ADVANCED_SEARCH=true
FEATURE_REAL_TIME_COLLABORATION=false
FEATURE_AI_SUGGESTIONS=false

# Beta features
FEATURE_GRAPH_VISUALIZATION=true
FEATURE_BULK_OPERATIONS=true

# ============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# ============================================================================

# Development Environment Example:
# PROJECT_ENV=development
# DEBUG=true
# LOG_LEVEL=debug
# VITE_API_BASE_URL=http://localhost:8080
# TABLE_NAME=brain2-dev
# MONITORING_ENABLED=false
# WAF_ENABLED=false

# Staging Environment Example:
# PROJECT_ENV=staging
# DEBUG=false
# LOG_LEVEL=info
# TABLE_NAME=brain2-staging
# MONITORING_ENABLED=true
# RATE_LIMIT_PER_MINUTE=500

# Production Environment Example:
# PROJECT_ENV=production
# DEBUG=false
# LOG_LEVEL=warn
# TABLE_NAME=brain2-prod
# MONITORING_ENABLED=true
# WAF_ENABLED=true
# BACKUP_ENABLED=true
# ALERTS_ENABLED=true

# ============================================================================
# MIGRATION FROM MULTIPLE .ENV FILES
# ============================================================================

# If migrating from separate .env files:
# 1. Copy values from frontend/.env (VITE_* variables)
# 2. Copy values from infra/.env (deployment variables)  
# 3. Copy values from backend/.env (if exists)
# 4. Run: ./scripts/migrate-env.sh to validate migration
# 5. Remove old .env files after testing

# ============================================================================
# SECURITY NOTES
# ============================================================================

# 1. Never commit the actual .env file to version control
# 2. Keep SUPABASE_SERVICE_ROLE_KEY secret (backend only)
# 3. SUPABASE_ANON_KEY is safe to expose in frontend
# 4. Use AWS Parameter Store or Secrets Manager in production
# 5. Rotate keys regularly
# 6. Use different Supabase projects for different environments

# ============================================================================
# LOADING INSTRUCTIONS
# ============================================================================

# This file is automatically loaded by:
# - ./build.sh (main build script)
# - ./scripts/load-env.sh (manual loading)
# - Frontend build process (Vite)
# - Backend build process (Go)
# - CDK deployment (TypeScript)

# Manual loading:
# source ./scripts/load-env.sh
# source ./scripts/load-env.sh frontend  # Frontend vars only
# source ./scripts/load-env.sh backend   # Backend vars only
# source ./scripts/load-env.sh infra     # Infrastructure vars only