/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/nodes": {
    /** List all memory nodes */
    get: operations["listNodes"];
    /** Create a new memory node */
    post: operations["createNode"];
  };
  "/api/nodes/{nodeId}": {
    /** Get details for a single node */
    get: operations["getNode"];
    /** Update a node */
    put: operations["updateNode"];
    /** Delete a node */
    delete: operations["deleteNode"];
  };
  "/api/graph-data": {
    /** Get data for graph visualization */
    get: operations["getGraphData"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Node: {
      nodeId?: string;
      content?: string;
      /** Format: date-time */
      timestamp?: string;
      version?: number;
    };
    NodeDetails: components["schemas"]["Node"] & {
      edges?: string[];
    };
    CreateNodeRequest: {
      content: string;
    };
    UpdateNodeRequest: {
      content: string;
    };
    GraphDataResponse: {
      elements?: (components["schemas"]["GraphNode"] | components["schemas"]["GraphEdge"])[];
    };
    GraphNode: {
      data?: components["schemas"]["NodeData"];
    };
    NodeData: {
      id?: string;
      label?: string;
    };
    GraphEdge: {
      data?: components["schemas"]["EdgeData"];
    };
    EdgeData: {
      id?: string;
      source?: string;
      target?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** List all memory nodes */
  listNodes: {
    responses: {
      /** @description A list of nodes */
      200: {
        content: {
          "application/json": {
            nodes?: components["schemas"]["Node"][];
          };
        };
      };
    };
  };
  /** Create a new memory node */
  createNode: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateNodeRequest"];
      };
    };
    responses: {
      /** @description The created node */
      201: {
        content: {
          "application/json": components["schemas"]["Node"];
        };
      };
    };
  };
  /** Get details for a single node */
  getNode: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description Detailed information about the node */
      200: {
        content: {
          "application/json": components["schemas"]["NodeDetails"];
        };
      };
    };
  };
  /** Update a node */
  updateNode: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateNodeRequest"];
      };
    };
    responses: {
      /** @description Success message */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Delete a node */
  deleteNode: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description Node deleted successfully */
      204: {
        content: never;
      };
    };
  };
  /** Get data for graph visualization */
  getGraphData: {
    responses: {
      /** @description A list of graph elements (nodes and edges) */
      200: {
        content: {
          "application/json": components["schemas"]["GraphDataResponse"];
        };
      };
    };
  };
}
