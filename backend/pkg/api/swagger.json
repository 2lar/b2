{
    "swagger": "2.0",
    "info": {
        "description": "A RESTful API for managing personal knowledge graphs with automatic memory connections and intelligent categorization.\n\n## Overview\nThe Brain2 API allows users to create, manage, and explore their personal knowledge graphs.\nIt provides endpoints for managing memory nodes, categories, and graph relationships with\nautomatic connection discovery and intelligent categorization features.\n\n## Authentication\nAll API endpoints require JWT authentication via the Authorization header.\n\n## Rate Limiting\nAPI requests are rate-limited per user to ensure fair usage and system stability.",
        "title": "Brain2 Knowledge Graph API",
        "contact": {
            "name": "Brain2 API Support",
            "url": "https://github.com/your-org/brain2-backend",
            "email": "support@brain2.example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "api.brain2.example.com",
    "basePath": "/api",
    "paths": {
        "/categories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all categories belonging to the authenticated user with optional filtering by level",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Management"
                ],
                "summary": "List all categories for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Filter by category level",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "example": 20,
                        "description": "Maximum number of categories to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 0,
                        "description": "Number of categories to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/brain2-backend_pkg_api.CategoryResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new category for organizing memory nodes with optional parent hierarchy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Management"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created category",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation failed",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{categoryId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a specific category by its ID including node count and hierarchy information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Management"
                ],
                "summary": "Get a specific category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved category",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.CategoryResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates an existing category's title, description, or color",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Management"
                ],
                "summary": "Update an existing category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated category",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation failed",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a category and optionally removes it from all associated nodes",
                "tags": [
                    "Category Management"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category successfully deleted"
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/graph-data": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves graph data for visualization including nodes and edges in a format suitable for graph libraries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Graph Operations"
                ],
                "summary": "Get graph visualization data",
                "responses": {
                    "200": {
                        "description": "Graph data for visualization",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.GraphDataResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the basic health status of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Basic health check",
                "responses": {
                    "200": {
                        "description": "Application is healthy",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.HealthResponse"
                        }
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all memory nodes belonging to the authenticated user, including content, tags, and metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory Management"
                ],
                "summary": "List all memory nodes for the authenticated user",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user's memory nodes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/brain2-backend_pkg_api.Node"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new memory node with content, optional title and tags. The system automatically extracts keywords and establishes connections to existing nodes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory Management"
                ],
                "summary": "Create a new memory node",
                "parameters": [
                    {
                        "description": "Memory node creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.CreateNodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created memory node",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.Node"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation failed",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/nodes/bulk-delete": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes multiple memory nodes and all their connections in a single operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory Management"
                ],
                "summary": "Delete multiple memory nodes",
                "parameters": [
                    {
                        "description": "Bulk delete request with node IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.BulkDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bulk delete operation completed",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.BulkDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/nodes/{nodeId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a specific memory node by its ID, including full details and connected edges",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory Management"
                ],
                "summary": "Get a specific memory node by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Memory node ID",
                        "name": "nodeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved memory node details",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.NodeDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid node ID format",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Memory node not found",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates an existing memory node's content, title, and tags. The system will re-analyze connections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory Management"
                ],
                "summary": "Update an existing memory node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Memory node ID",
                        "name": "nodeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Memory node update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.UpdateNodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated memory node",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.NodeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or node ID",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Memory node not found",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a memory node and all its connections. This operation cannot be undone.",
                "tags": [
                    "Memory Management"
                ],
                "summary": "Delete a memory node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Memory node ID",
                        "name": "nodeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Memory node successfully deleted"
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Memory node not found",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Returns the readiness status of the application for load balancer health checks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Application readiness check",
                "responses": {
                    "200": {
                        "description": "Application is ready to serve requests",
                        "schema": {
                            "$ref": "#/definitions/brain2-backend_pkg_api.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "brain2-backend_pkg_api.BulkDeleteRequest": {
            "type": "object",
            "properties": {
                "nodeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "brain2-backend_pkg_api.BulkDeleteResponse": {
            "type": "object",
            "properties": {
                "deletedCount": {
                    "type": "integer"
                },
                "failedIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "brain2-backend_pkg_api.CategoryResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#FF5722"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "AI and ML related content"
                },
                "id": {
                    "type": "string",
                    "example": "cat-123"
                },
                "level": {
                    "type": "integer",
                    "example": 1
                },
                "nodeCount": {
                    "type": "integer",
                    "example": 15
                },
                "parentId": {
                    "type": "string",
                    "example": "parent-category-id"
                },
                "title": {
                    "type": "string",
                    "example": "Machine Learning"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-16T10:30:00Z"
                }
            }
        },
        "brain2-backend_pkg_api.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#FF5722"
                },
                "description": {
                    "type": "string",
                    "example": "AI and ML related content"
                },
                "parentId": {
                    "type": "string",
                    "example": "parent-category-id"
                },
                "title": {
                    "type": "string",
                    "example": "Machine Learning"
                }
            }
        },
        "brain2-backend_pkg_api.CreateNodeRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "brain2-backend_pkg_api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request body"
                }
            }
        },
        "brain2-backend_pkg_api.GraphDataResponse": {
            "type": "object",
            "properties": {
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/brain2-backend_pkg_api.GraphDataResponse_Elements_Item"
                    }
                }
            }
        },
        "brain2-backend_pkg_api.GraphDataResponse_Elements_Item": {
            "type": "object",
            "properties": {
                "data": {},
                "group": {
                    "type": "string"
                }
            }
        },
        "brain2-backend_pkg_api.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "brain2-backend_pkg_api.Node": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "nodeId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "brain2-backend_pkg_api.NodeDetailsResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "edges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "brain2-backend_pkg_api.NodeResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "brain2-backend_pkg_api.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#2196F3"
                },
                "description": {
                    "type": "string",
                    "example": "Neural networks and deep learning"
                },
                "title": {
                    "type": "string",
                    "example": "Deep Learning"
                }
            }
        },
        "brain2-backend_pkg_api.UpdateNodeRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}