// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
)

// AddMemoryToCategoryRequest defines model for AddMemoryToCategoryRequest.
type AddMemoryToCategoryRequest struct {
	MemoryId string `json:"memoryId"`
}

// BulkDeleteRequest defines model for BulkDeleteRequest.
type BulkDeleteRequest struct {
	NodeIds []string `json:"nodeIds"`
}

// BulkDeleteResponse defines model for BulkDeleteResponse.
type BulkDeleteResponse struct {
	DeletedCount  *int      `json:"deletedCount,omitempty"`
	FailedNodeIds *[]string `json:"failedNodeIds,omitempty"`
	Message       *string   `json:"message,omitempty"`
}

// Category defines model for Category.
type Category struct {
	CreatedAt   time.Time `json:"createdAt"`
	Description *string   `json:"description,omitempty"`
	Id          string    `json:"id"`
	Title       string    `json:"title"`
}

// CreateCategoryRequest defines model for CreateCategoryRequest.
type CreateCategoryRequest struct {
	Description *string `json:"description,omitempty"`
	Title       string  `json:"title"`
}

// CreateNodeRequest defines model for CreateNodeRequest.
type CreateNodeRequest struct {
	Content string `json:"content"`

	// Tags User-defined tags for organizing and categorizing memories
	Tags *[]string `json:"tags,omitempty"`
}

// EdgeData defines model for EdgeData.
type EdgeData struct {
	Id     string `json:"id"`
	Source string `json:"source"`
	Target string `json:"target"`
}

// GraphDataResponse defines model for GraphDataResponse.
type GraphDataResponse struct {
	Elements *[]GraphDataResponse_Elements_Item `json:"elements,omitempty"`
}

// GraphDataResponse_Elements_Item defines model for GraphDataResponse.elements.Item.
type GraphDataResponse_Elements_Item struct {
	union json.RawMessage
}

// GraphEdge defines model for GraphEdge.
type GraphEdge struct {
	Data *EdgeData `json:"data,omitempty"`
}

// GraphNode defines model for GraphNode.
type GraphNode struct {
	Data *NodeData `json:"data,omitempty"`
}

// Node defines model for Node.
type Node struct {
	Content string `json:"content"`
	NodeId  string `json:"nodeId"`

	// Tags User-defined tags for organizing and categorizing memories
	Tags      *[]string `json:"tags,omitempty"`
	Timestamp time.Time `json:"timestamp"`
	Version   int       `json:"version"`
}

// NodeData defines model for NodeData.
type NodeData struct {
	Id    string `json:"id"`
	Label string `json:"label"`
}

// NodeDetails defines model for NodeDetails.
type NodeDetails struct {
	Content string    `json:"content"`
	Edges   *[]string `json:"edges,omitempty"`
	NodeId  string    `json:"nodeId"`

	// Tags User-defined tags for organizing and categorizing memories
	Tags      *[]string `json:"tags,omitempty"`
	Timestamp time.Time `json:"timestamp"`
	Version   int       `json:"version"`
}

// UpdateCategoryRequest defines model for UpdateCategoryRequest.
type UpdateCategoryRequest struct {
	Description *string `json:"description,omitempty"`
	Title       string  `json:"title"`
}

// UpdateNodeRequest defines model for UpdateNodeRequest.
type UpdateNodeRequest struct {
	Content string `json:"content"`

	// Tags User-defined tags for organizing and categorizing memories
	Tags *[]string `json:"tags,omitempty"`
}

// CreateCategoryJSONRequestBody defines body for CreateCategory for application/json ContentType.
type CreateCategoryJSONRequestBody = CreateCategoryRequest

// UpdateCategoryJSONRequestBody defines body for UpdateCategory for application/json ContentType.
type UpdateCategoryJSONRequestBody = UpdateCategoryRequest

// AddMemoryToCategoryJSONRequestBody defines body for AddMemoryToCategory for application/json ContentType.
type AddMemoryToCategoryJSONRequestBody = AddMemoryToCategoryRequest

// CreateNodeJSONRequestBody defines body for CreateNode for application/json ContentType.
type CreateNodeJSONRequestBody = CreateNodeRequest

// BulkDeleteNodesJSONRequestBody defines body for BulkDeleteNodes for application/json ContentType.
type BulkDeleteNodesJSONRequestBody = BulkDeleteRequest

// UpdateNodeJSONRequestBody defines body for UpdateNode for application/json ContentType.
type UpdateNodeJSONRequestBody = UpdateNodeRequest

// AsGraphNode returns the union data inside the GraphDataResponse_Elements_Item as a GraphNode
func (t GraphDataResponse_Elements_Item) AsGraphNode() (GraphNode, error) {
	var body GraphNode
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGraphNode overwrites any union data inside the GraphDataResponse_Elements_Item as the provided GraphNode
func (t *GraphDataResponse_Elements_Item) FromGraphNode(v GraphNode) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGraphNode performs a merge with any union data inside the GraphDataResponse_Elements_Item, using the provided GraphNode
func (t *GraphDataResponse_Elements_Item) MergeGraphNode(v GraphNode) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGraphEdge returns the union data inside the GraphDataResponse_Elements_Item as a GraphEdge
func (t GraphDataResponse_Elements_Item) AsGraphEdge() (GraphEdge, error) {
	var body GraphEdge
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGraphEdge overwrites any union data inside the GraphDataResponse_Elements_Item as the provided GraphEdge
func (t *GraphDataResponse_Elements_Item) FromGraphEdge(v GraphEdge) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGraphEdge performs a merge with any union data inside the GraphDataResponse_Elements_Item, using the provided GraphEdge
func (t *GraphDataResponse_Elements_Item) MergeGraphEdge(v GraphEdge) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t GraphDataResponse_Elements_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *GraphDataResponse_Elements_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
