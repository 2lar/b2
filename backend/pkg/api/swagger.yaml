basePath: /api
definitions:
  brain2-backend_pkg_api.BulkDeleteRequest:
    properties:
      nodeIds:
        items:
          type: string
        type: array
    type: object
  brain2-backend_pkg_api.BulkDeleteResponse:
    properties:
      deletedCount:
        type: integer
      failedIds:
        items:
          type: string
        type: array
    type: object
  brain2-backend_pkg_api.CategoryResponse:
    properties:
      color:
        example: '#FF5722'
        type: string
      createdAt:
        example: "2024-01-15T10:30:00Z"
        type: string
      description:
        example: AI and ML related content
        type: string
      id:
        example: cat-123
        type: string
      level:
        example: 1
        type: integer
      nodeCount:
        example: 15
        type: integer
      parentId:
        example: parent-category-id
        type: string
      title:
        example: Machine Learning
        type: string
      updatedAt:
        example: "2024-01-16T10:30:00Z"
        type: string
    type: object
  brain2-backend_pkg_api.CreateCategoryRequest:
    properties:
      color:
        example: '#FF5722'
        type: string
      description:
        example: AI and ML related content
        type: string
      parentId:
        example: parent-category-id
        type: string
      title:
        example: Machine Learning
        type: string
    required:
    - title
    type: object
  brain2-backend_pkg_api.CreateNodeRequest:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  brain2-backend_pkg_api.ErrorResponse:
    properties:
      error:
        example: Invalid request body
        type: string
    type: object
  brain2-backend_pkg_api.GraphDataResponse:
    properties:
      elements:
        items:
          $ref: '#/definitions/brain2-backend_pkg_api.GraphDataResponse_Elements_Item'
        type: array
    type: object
  brain2-backend_pkg_api.GraphDataResponse_Elements_Item:
    properties:
      data: {}
      group:
        type: string
    type: object
  brain2-backend_pkg_api.HealthResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  brain2-backend_pkg_api.Node:
    properties:
      content:
        type: string
      createdAt:
        type: string
      metadata:
        additionalProperties: true
        type: object
      nodeId:
        type: string
      tags:
        items:
          type: string
        type: array
      timestamp:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      user_id:
        type: string
    type: object
  brain2-backend_pkg_api.NodeDetailsResponse:
    properties:
      content:
        type: string
      edges:
        items:
          type: string
        type: array
      nodeId:
        type: string
      tags:
        items:
          type: string
        type: array
      timestamp:
        type: string
      title:
        type: string
      version:
        type: integer
    type: object
  brain2-backend_pkg_api.NodeResponse:
    properties:
      content:
        type: string
      nodeId:
        type: string
      tags:
        items:
          type: string
        type: array
      timestamp:
        type: string
      title:
        type: string
      version:
        type: integer
    type: object
  brain2-backend_pkg_api.UpdateCategoryRequest:
    properties:
      color:
        example: '#2196F3'
        type: string
      description:
        example: Neural networks and deep learning
        type: string
      title:
        example: Deep Learning
        type: string
    type: object
  brain2-backend_pkg_api.UpdateNodeRequest:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
host: api.brain2.example.com
info:
  contact:
    email: support@brain2.example.com
    name: Brain2 API Support
    url: https://github.com/your-org/brain2-backend
  description: |-
    A RESTful API for managing personal knowledge graphs with automatic memory connections and intelligent categorization.

    ## Overview
    The Brain2 API allows users to create, manage, and explore their personal knowledge graphs.
    It provides endpoints for managing memory nodes, categories, and graph relationships with
    automatic connection discovery and intelligent categorization features.

    ## Authentication
    All API endpoints require JWT authentication via the Authorization header.

    ## Rate Limiting
    API requests are rate-limited per user to ensure fair usage and system stability.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Brain2 Knowledge Graph API
  version: 1.0.0
paths:
  /categories:
    get:
      description: Retrieves all categories belonging to the authenticated user with
        optional filtering by level
      parameters:
      - description: Filter by category level
        example: 1
        in: query
        name: level
        type: integer
      - default: 50
        description: Maximum number of categories to return
        example: 20
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of categories to skip
        example: 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved categories
          schema:
            items:
              $ref: '#/definitions/brain2-backend_pkg_api.CategoryResponse'
            type: array
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: List all categories for the authenticated user
      tags:
      - Category Management
    post:
      consumes:
      - application/json
      description: Creates a new category for organizing memory nodes with optional
        parent hierarchy
      parameters:
      - description: Category creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/brain2-backend_pkg_api.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created category
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.CategoryResponse'
        "400":
          description: Invalid request body or validation failed
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new category
      tags:
      - Category Management
  /categories/{categoryId}:
    delete:
      description: Deletes a category and optionally removes it from all associated
        nodes
      parameters:
      - description: Category ID
        in: path
        name: categoryId
        required: true
        type: string
      responses:
        "204":
          description: Category successfully deleted
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "404":
          description: Category not found
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a category
      tags:
      - Category Management
    get:
      description: Retrieves a specific category by its ID including node count and
        hierarchy information
      parameters:
      - description: Category ID
        in: path
        name: categoryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved category
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.CategoryResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "404":
          description: Category not found
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a specific category by ID
      tags:
      - Category Management
    put:
      consumes:
      - application/json
      description: Updates an existing category's title, description, or color
      parameters:
      - description: Category ID
        in: path
        name: categoryId
        required: true
        type: string
      - description: Category update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/brain2-backend_pkg_api.UpdateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated category
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.CategoryResponse'
        "400":
          description: Invalid request body or validation failed
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "404":
          description: Category not found
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing category
      tags:
      - Category Management
  /graph-data:
    get:
      description: Retrieves graph data for visualization including nodes and edges
        in a format suitable for graph libraries
      produces:
      - application/json
      responses:
        "200":
          description: Graph data for visualization
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.GraphDataResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Get graph visualization data
      tags:
      - Graph Operations
  /health:
    get:
      description: Returns the basic health status of the application
      produces:
      - application/json
      responses:
        "200":
          description: Application is healthy
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.HealthResponse'
      summary: Basic health check
      tags:
      - System
  /nodes:
    get:
      description: Retrieves all memory nodes belonging to the authenticated user,
        including content, tags, and metadata
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user's memory nodes
          schema:
            items:
              $ref: '#/definitions/brain2-backend_pkg_api.Node'
            type: array
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: List all memory nodes for the authenticated user
      tags:
      - Memory Management
    post:
      consumes:
      - application/json
      description: Creates a new memory node with content, optional title and tags.
        The system automatically extracts keywords and establishes connections to
        existing nodes.
      parameters:
      - description: Memory node creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/brain2-backend_pkg_api.CreateNodeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created memory node
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.Node'
        "400":
          description: Invalid request body or validation failed
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new memory node
      tags:
      - Memory Management
  /nodes/{nodeId}:
    delete:
      description: Deletes a memory node and all its connections. This operation cannot
        be undone.
      parameters:
      - description: Memory node ID
        in: path
        name: nodeId
        required: true
        type: string
      responses:
        "204":
          description: Memory node successfully deleted
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "404":
          description: Memory node not found
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a memory node
      tags:
      - Memory Management
    get:
      description: Retrieves a specific memory node by its ID, including full details
        and connected edges
      parameters:
      - description: Memory node ID
        in: path
        name: nodeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved memory node details
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.NodeDetailsResponse'
        "400":
          description: Invalid node ID format
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "404":
          description: Memory node not found
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a specific memory node by ID
      tags:
      - Memory Management
    put:
      consumes:
      - application/json
      description: Updates an existing memory node's content, title, and tags. The
        system will re-analyze connections.
      parameters:
      - description: Memory node ID
        in: path
        name: nodeId
        required: true
        type: string
      - description: Memory node update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/brain2-backend_pkg_api.UpdateNodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated memory node
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.NodeResponse'
        "400":
          description: Invalid request body or node ID
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "404":
          description: Memory node not found
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing memory node
      tags:
      - Memory Management
  /nodes/bulk-delete:
    post:
      consumes:
      - application/json
      description: Deletes multiple memory nodes and all their connections in a single
        operation
      parameters:
      - description: Bulk delete request with node IDs
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/brain2-backend_pkg_api.BulkDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Bulk delete operation completed
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.BulkDeleteResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
        "503":
          description: Service temporarily unavailable
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete multiple memory nodes
      tags:
      - Memory Management
  /ready:
    get:
      description: Returns the readiness status of the application for load balancer
        health checks
      produces:
      - application/json
      responses:
        "200":
          description: Application is ready to serve requests
          schema:
            $ref: '#/definitions/brain2-backend_pkg_api.HealthResponse'
      summary: Application readiness check
      tags:
      - System
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
