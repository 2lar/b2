# Brain2 Backend Environment Configuration
# Copy this file to .env and update with your actual values

# ============================================================================
# ENVIRONMENT SETTINGS
# ============================================================================

# Application environment: development, staging, production
ENV=development

# Log level: trace, debug, info, warn, error, fatal, panic
LOG_LEVEL=info

# Enable debug features (verbose logging, request tracing, etc.)
DEBUG=false

# ============================================================================
# AWS CONFIGURATION
# ============================================================================

# AWS Region where resources are deployed
AWS_REGION=us-east-1

# AWS credentials (leave empty to use default credential chain)
# For local development, you can use 'local' values with DynamoDB Local
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# AWS Session Token (if using temporary credentials)
AWS_SESSION_TOKEN=

# Custom AWS endpoint (for DynamoDB Local or LocalStack)
# Example: http://localhost:8000 for DynamoDB Local
# Example: http://localhost:4566 for LocalStack
AWS_ENDPOINT_URL=

# Disable AWS SDK default config loading (useful for local development)
AWS_SDK_LOAD_CONFIG=true

# ============================================================================
# DYNAMODB CONFIGURATION
# ============================================================================

# DynamoDB table name for storing all Brain2 data
# Format: brain2-{environment} (e.g., brain2-dev, brain2-prod)
TABLE_NAME=brain2-dev

# Global Secondary Index name for alternate access patterns
INDEX_NAME=GSI1

# DynamoDB endpoint override (for DynamoDB Local)
# Leave empty to use AWS DynamoDB
DYNAMODB_ENDPOINT=

# ============================================================================
# EVENTBRIDGE CONFIGURATION
# ============================================================================

# EventBridge custom event bus name
EVENT_BUS_NAME=brain2-events

# EventBridge event bus ARN (auto-generated if not specified)
EVENT_BUS_ARN=

# EventBridge endpoint override (for LocalStack)
EVENTBRIDGE_ENDPOINT=

# ============================================================================
# AUTHENTICATION & AUTHORIZATION
# ============================================================================

# Supabase configuration for JWT validation
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# JWT secret for token validation (if not using Supabase)
JWT_SECRET=

# JWT issuer for token validation
JWT_ISSUER=https://your-project.supabase.co/auth/v1

# JWT audience for token validation
JWT_AUDIENCE=authenticated

# ============================================================================
# LAMBDA CONFIGURATION
# ============================================================================

# Lambda function memory size (MB) - affects CPU allocation
LAMBDA_MEMORY_SIZE=512

# Lambda function timeout (seconds)
LAMBDA_TIMEOUT=30

# Lambda runtime environment variables
_LAMBDA_SERVER_PORT=8080
LAMBDA_TASK_ROOT=/var/task
LAMBDA_RUNTIME_DIR=/var/runtime

# ============================================================================
# PERFORMANCE & CONCURRENCY
# ============================================================================

# Maximum number of concurrent goroutines for processing
MAX_CONCURRENCY=10

# Connection pool size for DynamoDB
DB_CONNECTION_POOL_SIZE=5

# Request timeout for external services (seconds)
REQUEST_TIMEOUT=30

# Circuit breaker settings
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT=60

# ============================================================================
# CACHING CONFIGURATION
# ============================================================================

# Enable in-memory caching
CACHE_ENABLED=true

# Cache TTL for read operations (seconds)
CACHE_TTL=300

# Cache size limit (number of items)
CACHE_SIZE_LIMIT=1000

# ============================================================================
# OBSERVABILITY & MONITORING
# ============================================================================

# Enable distributed tracing
TRACING_ENABLED=false

# Tracing service endpoint (Jaeger, X-Ray, etc.)
TRACING_ENDPOINT=

# Tracing sample rate (0.0 to 1.0)
TRACING_SAMPLE_RATE=0.1

# Enable metrics collection
METRICS_ENABLED=false

# Metrics endpoint for Prometheus scraping
METRICS_ENDPOINT=/metrics

# Enable request logging
ENABLE_REQUEST_LOGGING=false

# Enable performance logging  
ENABLE_PERFORMANCE_LOGGING=false

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Enable batch operations for improved performance
ENABLE_BATCH_OPERATIONS=true

# Enable event sourcing for audit trail
ENABLE_EVENT_SOURCING=true

# Enable connection analysis parallelization
ENABLE_PARALLEL_CONNECTION_ANALYSIS=true

# Enable automatic graph optimization
ENABLE_GRAPH_OPTIMIZATION=false

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Enable hot reload for development
HOT_RELOAD=false

# Enable pprof profiling endpoint (development only)
ENABLE_PPROF=false

# Profiling server port
PPROF_PORT=6060

# Enable CORS for local development
ENABLE_CORS=false

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Enable SQL query logging (if applicable)
ENABLE_QUERY_LOGGING=false

# ============================================================================
# TESTING CONFIGURATION
# ============================================================================

# Test database table name
TEST_TABLE_NAME=brain2-test

# Enable test fixtures
ENABLE_TEST_FIXTURES=false

# Test data seed file path
TEST_DATA_SEED_PATH=./testdata/seed.json

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================

# OpenAI API key for content analysis (if using AI features)
OPENAI_API_KEY=

# External service timeouts
EXTERNAL_SERVICE_TIMEOUT=15

# Rate limiting configuration
RATE_LIMIT_ENABLED=false
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# ============================================================================
# DATA PROCESSING
# ============================================================================

# Maximum content length for memory nodes (characters)
MAX_CONTENT_LENGTH=10000

# Maximum number of keywords extracted per node
MAX_KEYWORDS_PER_NODE=20

# Maximum number of tags per node
MAX_TAGS_PER_NODE=10

# Content processing timeout (seconds)
CONTENT_PROCESSING_TIMEOUT=5

# ============================================================================
# WEBSOCKET CONFIGURATION
# ============================================================================

# WebSocket API Gateway connection table
WS_CONNECTION_TABLE_NAME=brain2-ws-connections

# WebSocket message TTL (seconds)
WS_MESSAGE_TTL=86400

# Maximum WebSocket connections per user
MAX_WS_CONNECTIONS_PER_USER=5

# ============================================================================
# BACKUP & MAINTENANCE
# ============================================================================

# Enable automatic backups
BACKUP_ENABLED=false

# Backup retention period (days)
BACKUP_RETENTION_DAYS=30

# Cleanup job schedule (cron expression)
CLEANUP_SCHEDULE="0 2 * * *"

# Data retention period (days)
DATA_RETENTION_DAYS=365

# ============================================================================
# SECURITY SETTINGS
# ============================================================================

# Enable request signing validation
REQUIRE_REQUEST_SIGNING=false

# API key for service-to-service communication
API_KEY=

# Enable IP whitelisting
ENABLE_IP_WHITELIST=false

# Allowed IP addresses (comma-separated)
ALLOWED_IPS=127.0.0.1,::1

# Enable audit logging
ENABLE_AUDIT_LOGGING=true

# ============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# ============================================================================

# Local Development Example:
# ENV=development
# LOG_LEVEL=debug  
# DEBUG=true
# AWS_ENDPOINT_URL=http://localhost:8000
# TABLE_NAME=brain2-dev
# ENABLE_REQUEST_LOGGING=true
# ENABLE_PPROF=true

# Testing Example:
# ENV=test
# LOG_LEVEL=error
# DEBUG=false
# TABLE_NAME=brain2-test
# ENABLE_TEST_FIXTURES=true

# Production Example:
# ENV=production
# LOG_LEVEL=warn
# DEBUG=false
# TRACING_ENABLED=true
# METRICS_ENABLED=true
# BACKUP_ENABLED=true
# ENABLE_AUDIT_LOGGING=true

# ============================================================================
# NOTES
# ============================================================================

# 1. Never commit actual secrets to version control
# 2. Use AWS Parameter Store or Secrets Manager in production
# 3. Environment variables override default configuration values
# 4. Some settings may require application restart to take effect
# 5. Consult documentation for detailed configuration explanations